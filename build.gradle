plugins {
    id 'org.jetbrains.kotlin.jvm'
    id 'fabric-loom'
    id 'maven-publish'
    id 'org.jreleaser'
}

sourceSets {
    testmod {
        compileClasspath += main.compileClasspath + main.output
        runtimeClasspath += main.runtimeClasspath + main.output
    }
}

dependencies {
    minecraft "com.mojang:minecraft:$minecraft_version"
    mappings "net.fabricmc:yarn:$yarn_version:v2"
    modImplementation "net.fabricmc:fabric-loader:$fabric_loader_version"
    modImplementation "net.fabricmc.fabric-api:fabric-api:$fabric_api_version"
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testImplementation "org.junit.jupiter:junit-jupiter-params"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
    testImplementation "org.mockito:mockito-core:$mockito_version"
    testImplementation "org.mockito:mockito-junit-jupiter:$mockito_version"
    testImplementation "net.fabricmc:fabric-loader-junit:$fabric_loader_version"
}

test {
    useJUnitPlatform()
}

processResources {
    filesMatching('fabric.mod.json') {
        expand project.properties
    }
}

processTestmodResources {
    filesMatching('fabric.mod.json') {
        expand project.properties
    }
}

java {
    withJavadocJar()
    withSourcesJar()
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            groupId = project.group
            artifactId = project.name
            version = project.version

            pom {
                name = 'tome'
                description = 'Library for creating server-side skills'
                url = 'https://github.com/Kouvali/tome'

                licenses {
                    license {
                        name = 'Apache-2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'Kouvali'
                    }
                }

                scm {
                    connection = 'scm:git:https://github.com/Kouvali/tome.git'
                    developerConnection = 'scm:git:ssh://github.com/Kouvali/tome.git'
                    url = 'http://github.com/Kouvali/tome'
                }
            }
        }
    }

    repositories {
        maven {
            url = layout.buildDirectory.dir('staging-deploy')
        }
    }
}

jreleaser {
    signing {
        active = 'ALWAYS'
        armored = true
    }

    release {
        github {
            enabled = false
        }
    }

    deploy {
        maven {
            mavenCentral {
                sonatype {
                    active = 'ALWAYS'
                    url = 'https://central.sonatype.com/api/v1/publisher'
                    stagingRepository('build/staging-deploy')
                }
            }
        }
    }
}